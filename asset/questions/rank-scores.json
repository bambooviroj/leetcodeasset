{
  "question": {
    "questionId": "178",
    "questionFrontendId": "178",
    "boundTopicId": null,
    "title": "Rank Scores",
    "titleSlug": "rank-scores",
    "content": "<p>Write a SQL query to rank scores. If there is a tie between two scores, both should have the same ranking. Note that after a tie, the next ranking number should be the next consecutive integer value. In other words, there should be no &quot;holes&quot; between ranks.</p>\r\n\r\n<pre>\r\n+----+-------+\r\n| Id | Score |\r\n+----+-------+\r\n| 1  | 3.50  |\r\n| 2  | 3.65  |\r\n| 3  | 4.00  |\r\n| 4  | 3.85  |\r\n| 5  | 4.00  |\r\n| 6  | 3.65  |\r\n+----+-------+\r\n</pre>\r\n\r\n<p>For example, given the above <code>Scores</code> table, your query should generate the following report (order by highest score):</p>\r\n\r\n<pre>\r\n+-------+------+\r\n| Score | Rank |\r\n+-------+------+\r\n| 4.00  | 1    |\r\n| 4.00  | 1    |\r\n| 3.85  | 2    |\r\n|&nbsp;3.65  | 3    |\r\n| 3.65  | 3    |\r\n| 3.50  | 4    |\r\n+-------+------+\r\n</pre>\r\n",
    "translatedTitle": null,
    "translatedContent": null,
    "isPaidOnly": false,
    "difficulty": "Medium",
    "likes": 533,
    "dislikes": 78,
    "isLiked": null,
    "similarQuestions": "[]",
    "contributors": [],
    "langToValidPlayground": "{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}",
    "topicTags": [],
    "companyTagStats": null,
    "codeSnippets": [
      {
        "lang": "MySQL",
        "langSlug": "mysql",
        "code": "# Write your MySQL query statement below\n",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "MS SQL Server",
        "langSlug": "mssql",
        "code": "/* Write your T-SQL query statement below */\n",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Oracle",
        "langSlug": "oraclesql",
        "code": "/* Write your PL/SQL query statement below */\n",
        "__typename": "CodeSnippetNode"
      }
    ],
    "stats": "{\"totalAccepted\": \"72.2K\", \"totalSubmission\": \"189.1K\", \"totalAcceptedRaw\": 72245, \"totalSubmissionRaw\": 189052, \"acRate\": \"38.2%\"}",
    "hints": [],
    "solution": null,
    "status": null,
    "sampleTestCase": "{\"headers\": {\"Scores\": [\"Id\", \"Score\"]}, \"rows\": {\"Scores\": [[1, 3.50], [2, 3.65], [3, 4.00], [4, 3.85], [5, 4.00], [6, 3.65]]}}",
    "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Scores (Id int, Score DECIMAL(3,2))\"\n  ],\n  \"mssql\": [\n    \"create table Scores ( Id int, Score DECIMAL(3,2) )\"\n  ],\n  \"oraclesql\": [\n    \"create table Scores ( Id int, Score DECIMAL(3,2) )\"\n  ],\n  \"database\": true\n}",
    "judgerAvailable": true,
    "judgeType": "large",
    "mysqlSchemas": [
      "Create table If Not Exists Scores (Id int, Score DECIMAL(3,2))",
      "Truncate table Scores",
      "insert into Scores (Id, Score) values ('1', '3.5')",
      "insert into Scores (Id, Score) values ('2', '3.65')",
      "insert into Scores (Id, Score) values ('3', '4.0')",
      "insert into Scores (Id, Score) values ('4', '3.85')",
      "insert into Scores (Id, Score) values ('5', '4.0')",
      "insert into Scores (Id, Score) values ('6', '3.65')"
    ],
    "enableRunCode": true,
    "enableTestMode": false,
    "envInfo": "{\"mysql\": [\"MySQL\", \"<p>Run with <code>mysql-server 5.7.21</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p>Run with <code>mssql</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p>Run with <code>oracle sql</code>.</p>\"]}",
    "libraryUrl": null,
    "__typename": "QuestionNode"
  }
}