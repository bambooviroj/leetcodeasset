{
  "question": {
    "questionId": "618",
    "questionFrontendId": "618",
    "boundTopicId": null,
    "title": "Students Report By Geography",
    "titleSlug": "students-report-by-geography",
    "content": null,
    "translatedTitle": null,
    "translatedContent": null,
    "isPaidOnly": true,
    "difficulty": "Hard",
    "likes": 23,
    "dislikes": 56,
    "isLiked": null,
    "similarQuestions": "[]",
    "contributors": [
      {
        "username": "Mr-Bin",
        "profileUrl": "/mr-bin/",
        "avatarUrl": "https://assets.leetcode.com/users/mr-bin/avatar_1547655304.png",
        "__typename": "ContributorNode"
      }
    ],
    "langToValidPlayground": null,
    "topicTags": [],
    "companyTagStats": null,
    "codeSnippets": null,
    "stats": "{\"totalAccepted\": \"3.2K\", \"totalSubmission\": \"7.2K\", \"totalAcceptedRaw\": 3166, \"totalSubmissionRaw\": 7152, \"acRate\": \"44.3%\"}",
    "hints": [],
    "solution": {
      "id": "175",
      "canSeeDetail": true,
      "__typename": "ArticleNode"
    },
    "status": null,
    "sampleTestCase": "{\"headers\":{\"student\":[\"name\",\"continent\"]},\"rows\":{\"student\":[[\"Jane\",\"America\"],[\"Pascal\",\"Europe\"],[\"Xi\",\"Asia\"],[\"Jack\",\"America\"]]}}",
    "metaData": "{\r\n  \"mysql\": [\r\n    \"Create table If Not Exists student (name varchar(50), continent varchar(7))\"\r\n  ],\r\n  \"mssql\": [\r\n    \"Create table student (name varchar(50), continent varchar(7))\"\r\n  ],\r\n  \"oraclesql\": [\r\n    \"Create table student (name varchar(50), continent varchar(7))\"\r\n  ],\r\n  \"database\": true\r\n}",
    "judgerAvailable": true,
    "judgeType": "large",
    "mysqlSchemas": [
      "Create table If Not Exists student (name varchar(50), continent varchar(7))",
      "Truncate table student",
      "insert into student (name, continent) values ('Jane', 'America')",
      "insert into student (name, continent) values ('Pascal', 'Europe')",
      "insert into student (name, continent) values ('Xi', 'Asia')",
      "insert into student (name, continent) values ('Jack', 'America')"
    ],
    "enableRunCode": true,
    "enableTestMode": false,
    "envInfo": "{\"mysql\": [\"MySQL\", \"<p>Run with <code>mysql-server 5.7.21</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p>Run with <code>mssql</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p>Run with <code>oracle sql</code>.</p>\"]}",
    "libraryUrl": null,
    "__typename": "QuestionNode"
  }
}