{
  "question": {
    "questionId": "586",
    "questionFrontendId": "586",
    "boundTopicId": null,
    "title": "Customer Placing the Largest Number of Orders",
    "titleSlug": "customer-placing-the-largest-number-of-orders",
    "content": null,
    "translatedTitle": null,
    "translatedContent": null,
    "isPaidOnly": true,
    "difficulty": "Easy",
    "likes": 71,
    "dislikes": 4,
    "isLiked": null,
    "similarQuestions": "[]",
    "contributors": [
      {
        "username": "Mr-Bin",
        "profileUrl": "/mr-bin/",
        "avatarUrl": "https://assets.leetcode.com/users/mr-bin/avatar_1547655304.png",
        "__typename": "ContributorNode"
      }
    ],
    "langToValidPlayground": null,
    "topicTags": [],
    "companyTagStats": null,
    "codeSnippets": null,
    "stats": "{\"totalAccepted\": \"15.8K\", \"totalSubmission\": \"23.4K\", \"totalAcceptedRaw\": 15803, \"totalSubmissionRaw\": 23414, \"acRate\": \"67.5%\"}",
    "hints": [
      "MySQL uses a different expression to get the first records other than MSSQL's TOP expression."
    ],
    "solution": {
      "id": "160",
      "canSeeDetail": true,
      "__typename": "ArticleNode"
    },
    "status": null,
    "sampleTestCase": "{\"headers\":{\"orders\":[\"order_number\",\"customer_number\"]},\"rows\":{\"orders\":[[1,1],[2,2],[3,3],[4,3]]}}",
    "metaData": "{\r\n  \"mysql\": [\r\n    \"Create table If Not Exists orders (order_number int, customer_number int, order_date date, required_date date, shipped_date date, status char(15), comment char(200), key(order_number))\"\r\n  ],\r\n  \"mssql\": [\r\n    \"Create table orders (order_number int, customer_number int, order_date date, required_date date, shipped_date date, status char(15), comment char(200))\"\r\n  ],\r\n  \"oraclesql\": [\r\n    \"Create table orders (order_number int, customer_number int)\"\r\n  ],\r\n  \"database\": true\r\n}",
    "judgerAvailable": true,
    "judgeType": "large",
    "mysqlSchemas": [
      "Create table If Not Exists orders (order_number int, customer_number int, order_date date, required_date date, shipped_date date, status char(15), comment char(200), key(order_number))",
      "Truncate table orders",
      "insert into orders (order_number, customer_number) values ('1', '1')",
      "insert into orders (order_number, customer_number) values ('2', '2')",
      "insert into orders (order_number, customer_number) values ('3', '3')",
      "insert into orders (order_number, customer_number) values ('4', '3')"
    ],
    "enableRunCode": true,
    "enableTestMode": false,
    "envInfo": "{\"mysql\": [\"MySQL\", \"<p>Run with <code>mysql-server 5.7.21</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p>Run with <code>mssql</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p>Run with <code>oracle sql</code>.</p>\"]}",
    "libraryUrl": null,
    "__typename": "QuestionNode"
  }
}