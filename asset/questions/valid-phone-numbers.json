{
  "question": {
    "questionId": "193",
    "questionFrontendId": "193",
    "boundTopicId": null,
    "title": "Valid Phone Numbers",
    "titleSlug": "valid-phone-numbers",
    "content": "<p>Given a text file <code>file.txt</code> that contains list of phone numbers (one per line), write a one liner bash script to print all valid phone numbers.</p>\r\n\r\n<p>You may assume that a valid phone number must appear in one of the following two formats: (xxx) xxx-xxxx or xxx-xxx-xxxx. (x means a digit)</p>\r\n\r\n<p>You may also assume each line in the text file must not contain leading or trailing white spaces.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<p>Assume that <code>file.txt</code> has the following content:</p>\r\n\r\n<pre>\r\n987-123-4567\r\n123 456 7890\r\n(123) 456-7890\r\n</pre>\r\n\r\n<p>Your script should output the following valid phone numbers:</p>\r\n\r\n<pre>\r\n987-123-4567\r\n(123) 456-7890\r\n</pre>\r\n",
    "translatedTitle": null,
    "translatedContent": null,
    "isPaidOnly": false,
    "difficulty": "Easy",
    "likes": 105,
    "dislikes": 267,
    "isLiked": null,
    "similarQuestions": "[]",
    "contributors": [],
    "langToValidPlayground": "{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}",
    "topicTags": [],
    "companyTagStats": null,
    "codeSnippets": [
      {
        "lang": "Bash",
        "langSlug": "bash",
        "code": "# Read from the file file.txt and output all valid phone numbers to stdout.\r\n",
        "__typename": "CodeSnippetNode"
      }
    ],
    "stats": "{\"totalAccepted\": \"27.9K\", \"totalSubmission\": \"109.9K\", \"totalAcceptedRaw\": 27937, \"totalSubmissionRaw\": 109930, \"acRate\": \"25.4%\"}",
    "hints": [],
    "solution": null,
    "status": null,
    "sampleTestCase": "0",
    "metaData": "{\n  \"shell\": true,\n  \"manual\": true\n}",
    "judgerAvailable": true,
    "judgeType": "large",
    "mysqlSchemas": [],
    "enableRunCode": false,
    "enableTestMode": false,
    "envInfo": "{\"bash\": [\"Bash\", \"<p>Run with <code>bash 4.3.30</code>.</p>\"]}",
    "libraryUrl": null,
    "__typename": "QuestionNode"
  }
}