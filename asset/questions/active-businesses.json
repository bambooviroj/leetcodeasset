{
  "question": {
    "questionId": "1225",
    "questionFrontendId": "1126",
    "boundTopicId": null,
    "title": "Active Businesses",
    "titleSlug": "active-businesses",
    "content": null,
    "translatedTitle": null,
    "translatedContent": null,
    "isPaidOnly": true,
    "difficulty": "Medium",
    "likes": 17,
    "dislikes": 0,
    "isLiked": null,
    "similarQuestions": "[]",
    "contributors": [],
    "langToValidPlayground": null,
    "topicTags": [],
    "companyTagStats": null,
    "codeSnippets": null,
    "stats": "{\"totalAccepted\": \"1.6K\", \"totalSubmission\": \"2.3K\", \"totalAcceptedRaw\": 1607, \"totalSubmissionRaw\": 2266, \"acRate\": \"70.9%\"}",
    "hints": [],
    "solution": null,
    "status": null,
    "sampleTestCase": "{\"headers\":{\"Events\":[\"business_id\",\"event_type\",\"occurences\"]},\"rows\":{\"Events\":[[1,\"reviews\",7],[3,\"reviews\",3],[1,\"ads\",11],[2,\"ads\",7],[3,\"ads\",6],[1,\"page views\",3],[2,\"page views\",12]]}}",
    "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Events (business_id int, event_type varchar(10), occurences int)\"\n  ],\n  \"mssql\": [\n    \"create table Events (business_id int, event_type varchar(10), occurences int)\"\n  ],\n  \"oraclesql\": [\n    \"create table Events (business_id int, event_type varchar(10), occurences int)\"\n  ],\n  \"database\": true\n}",
    "judgerAvailable": true,
    "judgeType": "large",
    "mysqlSchemas": [
      "Create table If Not Exists Events (business_id int, event_type varchar(10), occurences int)",
      "Truncate table Events",
      "insert into Events (business_id, event_type, occurences) values ('1', 'reviews', '7')",
      "insert into Events (business_id, event_type, occurences) values ('3', 'reviews', '3')",
      "insert into Events (business_id, event_type, occurences) values ('1', 'ads', '11')",
      "insert into Events (business_id, event_type, occurences) values ('2', 'ads', '7')",
      "insert into Events (business_id, event_type, occurences) values ('3', 'ads', '6')",
      "insert into Events (business_id, event_type, occurences) values ('1', 'page views', '3')",
      "insert into Events (business_id, event_type, occurences) values ('2', 'page views', '12')"
    ],
    "enableRunCode": true,
    "enableTestMode": false,
    "envInfo": "{\"mysql\": [\"MySQL\", \"<p>Run with <code>mysql-server 5.7.21</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p>Run with <code>mssql</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p>Run with <code>oracle sql</code>.</p>\"]}",
    "libraryUrl": null,
    "__typename": "QuestionNode"
  }
}