{
  "question": {
    "questionId": "1072",
    "questionFrontendId": "1019",
    "boundTopicId": null,
    "title": "Next Greater Node In Linked List",
    "titleSlug": "next-greater-node-in-linked-list",
    "content": "<p>We are given a linked list with&nbsp;<code>head</code>&nbsp;as the first node.&nbsp; Let&#39;s number the&nbsp;nodes in the list: <code>node_1, node_2, node_3, ...</code> etc.</p>\r\n\r\n<p>Each node may have a <em>next larger</em> <strong>value</strong>: for <code>node_i</code>,&nbsp;<code>next_larger(node_i)</code>&nbsp;is the <code>node_j.val</code> such that <code>j &gt; i</code>, <code>node_j.val &gt; node_i.val</code>, and <code>j</code> is the smallest possible choice.&nbsp; If such a <code>j</code>&nbsp;does not exist, the next larger value is <code>0</code>.</p>\r\n\r\n<p>Return an array of integers&nbsp;<code>answer</code>, where <code>answer[i] = next_larger(node_{i+1})</code>.</p>\r\n\r\n<p>Note that in the example <strong>inputs</strong>&nbsp;(not outputs) below, arrays such as <code>[2,1,5]</code>&nbsp;represent the serialization of a linked list with a head node value of 2, second node value of 1, and third node value of 5.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[2,1,5]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[5,5,0]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[2,7,4,3,5]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[7,0,5,5,0]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,7,5,1,9,2,5,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">[7,9,9,9,0,5,0,0]</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span>Note:</span></strong></p>\r\n\r\n<ol>\r\n\t<li><code><span>1 &lt;= node.val&nbsp;&lt;= 10^9</span></code><span>&nbsp;for each node in the linked list.</span></li>\r\n\t<li>The given list has length in the range <code>[0, 10000]</code>.</li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>",
    "translatedTitle": null,
    "translatedContent": null,
    "isPaidOnly": false,
    "difficulty": "Medium",
    "likes": 292,
    "dislikes": 22,
    "isLiked": null,
    "similarQuestions": "[]",
    "contributors": [
      {
        "username": "anupkmr03",
        "profileUrl": "/anupkmr03/",
        "avatarUrl": "https://assets.leetcode.com/users/anupkmr03/avatar_1550520938.png",
        "__typename": "ContributorNode"
      }
    ],
    "langToValidPlayground": "{\"cpp\": true, \"java\": true, \"python\": true, \"python3\": true, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}",
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list",
        "translatedName": null,
        "__typename": "TopicTagNode"
      },
      {
        "name": "Stack",
        "slug": "stack",
        "translatedName": null,
        "__typename": "TopicTagNode"
      }
    ],
    "companyTagStats": null,
    "codeSnippets": [
      {
        "lang": "C++",
        "langSlug": "cpp",
        "code": "/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> nextLargerNodes(ListNode* head) {\n        \n    }\n};",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Java",
        "langSlug": "java",
        "code": "/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\nclass Solution {\r\n    public int[] nextLargerNodes(ListNode head) {\r\n        \r\n    }\r\n}",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Python",
        "langSlug": "python",
        "code": "# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution(object):\n    def nextLargerNodes(self, head):\n        \"\"\"\n        :type head: ListNode\n        :rtype: List[int]\n        \"\"\"\n        ",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Python3",
        "langSlug": "python3",
        "code": "# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def nextLargerNodes(self, head: ListNode) -> List[int]:\n        ",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "C",
        "langSlug": "c",
        "code": "/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\n\n\n/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* nextLargerNodes(struct ListNode* head, int* returnSize){\n\n}\n\n",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "C#",
        "langSlug": "csharp",
        "code": "/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     public int val;\r\n *     public ListNode next;\r\n *     public ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public int[] NextLargerNodes(ListNode head) {\r\n        \r\n    }\r\n}",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "JavaScript",
        "langSlug": "javascript",
        "code": "/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @return {number[]}\n */\nvar nextLargerNodes = function(head) {\n    \n};",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Ruby",
        "langSlug": "ruby",
        "code": "# Definition for singly-linked list.\r\n# class ListNode\r\n#     attr_accessor :val, :next\r\n#     def initialize(val)\r\n#         @val = val\r\n#         @next = nil\r\n#     end\r\n# end\r\n\r\n# @param {ListNode} head\r\n# @return {Integer[]}\r\ndef next_larger_nodes(head)\r\n    \r\nend",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Swift",
        "langSlug": "swift",
        "code": "/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     public var val: Int\r\n *     public var next: ListNode?\r\n *     public init(_ val: Int) {\r\n *         self.val = val\r\n *         self.next = nil\r\n *     }\r\n * }\r\n */\r\nclass Solution {\r\n    func nextLargerNodes(_ head: ListNode?) -> [Int] {\r\n        \r\n    }\r\n}",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Go",
        "langSlug": "golang",
        "code": "/**\r\n * Definition for singly-linked list.\r\n * type ListNode struct {\r\n *     Val int\r\n *     Next *ListNode\r\n * }\r\n */\r\nfunc nextLargerNodes(head *ListNode) []int {\r\n    \r\n}",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Scala",
        "langSlug": "scala",
        "code": "/**\r\n * Definition for singly-linked list.\r\n * class ListNode(var _x: Int = 0) {\r\n *   var next: ListNode = null\r\n *   var x: Int = _x\r\n * }\r\n */\r\nobject Solution {\r\n    def nextLargerNodes(head: ListNode): Array[Int] = {\r\n        \r\n    }\r\n}",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Kotlin",
        "langSlug": "kotlin",
        "code": "/**\r\n * Example:\r\n * var li = ListNode(5)\r\n * var v = li.`val`\r\n * Definition for singly-linked list.\r\n * class ListNode(var `val`: Int) {\r\n *     var next: ListNode? = null\r\n * }\r\n */\r\nclass Solution {\r\n    fun nextLargerNodes(head: ListNode?): IntArray {\r\n        \r\n    }\r\n}",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Rust",
        "langSlug": "rust",
        "code": "// Definition for singly-linked list.\n// #[derive(PartialEq, Eq, Clone, Debug)]\n// pub struct ListNode {\n//   pub val: i32,\n//   pub next: Option<Box<ListNode>>\n// }\n// \n// impl ListNode {\n//   #[inline]\n//   fn new(val: i32) -> Self {\n//     ListNode {\n//       next: None,\n//       val\n//     }\n//   }\n// }\nimpl Solution {\n    pub fn next_larger_nodes(head: Option<Box<ListNode>>) -> Vec<i32> {\n        \n    }\n}",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "PHP",
        "langSlug": "php",
        "code": "/**\n * Definition for a singly-linked list.\n * class ListNode {\n *     public $val = 0;\n *     public $next = null;\n *     function __construct($val) { $this->val = $val; }\n * }\n */\nclass Solution {\n\n    /**\n     * @param ListNode $head\n     * @return Integer[]\n     */\n    function nextLargerNodes($head) {\n        \n    }\n}",
        "__typename": "CodeSnippetNode"
      }
    ],
    "stats": "{\"totalAccepted\": \"18.1K\", \"totalSubmission\": \"31.9K\", \"totalAcceptedRaw\": 18070, \"totalSubmissionRaw\": 31861, \"acRate\": \"56.7%\"}",
    "hints": [
      "We can use a stack that stores nodes in monotone decreasing order of value.  When we see a node_j with a larger value, every node_i in the stack has next_larger(node_i) = node_j ."
    ],
    "solution": null,
    "status": null,
    "sampleTestCase": "[2,1,5]",
    "metaData": "{\r\n  \"name\": \"nextLargerNodes\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"head\",\r\n      \"type\": \"ListNode\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer[]\"\r\n  }\r\n}\r\n",
    "judgerAvailable": true,
    "judgeType": "large",
    "mysqlSchemas": [],
    "enableRunCode": true,
    "enableTestMode": false,
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 8.2</code> using the latest C++ 17 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 8.2</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p>Compiled with <code>mono 5.18.0</code> providing <a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">full support for C# 7</a>.</p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p>Run with <code>nodejs 10.15.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"ruby\": [\"Ruby\", \"<p>Run with <code>ruby 2.4.5</code>.</p>\"], \"swift\": [\"Swift\", \"<p>Compiled with <code>swift 5.0.1</code>.</p>\\r\\n\\r\\n<p>We usually keep up with the <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">latest Swift released by Apple</a>, if not please let us know and we will update it as soon as possible!</p>\"], \"golang\": [\"Go\", \"<p>Compiled with <code>go 1.11.4</code>.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.6</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"scala\": [\"Scala\", \"<p>Compiled with <code>scala 2.11.12</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p>Compiled with <code>kotlin 1.3.10</code>.</p>\"], \"rust\": [\"Rust\", \"<p>Compiled with <code>rust 1.31.0 (edition = 2018)</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand</a>\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p>Run with <code>PHP 7.2</code>.</p>\"]}",
    "libraryUrl": null,
    "__typename": "QuestionNode"
  }
}