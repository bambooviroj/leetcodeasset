{
  "question": {
    "questionId": "620",
    "questionFrontendId": "620",
    "boundTopicId": null,
    "title": "Not Boring Movies",
    "titleSlug": "not-boring-movies",
    "content": "X city opened a new cinema, many people would like to go to this cinema. The cinema also gives out a poster indicating the movies&rsquo; ratings and descriptions.\r\n<p>Please write a SQL query to output movies with an odd numbered ID and a description that is not &#39;boring&#39;. Order the result by rating.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>For example, table <code>cinema</code>:</p>\r\n\r\n<pre>\r\n+---------+-----------+--------------+-----------+\r\n|   id    | movie     |  description |  rating   |\r\n+---------+-----------+--------------+-----------+\r\n|   1     | War       |   great 3D   |   8.9     |\r\n|   2     | Science   |   fiction    |   8.5     |\r\n|   3     | irish     |   boring     |   6.2     |\r\n|   4     | Ice song  |   Fantacy    |   8.6     |\r\n|   5     | House card|   Interesting|   9.1     |\r\n+---------+-----------+--------------+-----------+\r\n</pre>\r\nFor the example above, the output should be:\r\n\r\n<pre>\r\n+---------+-----------+--------------+-----------+\r\n|   id    | movie     |  description |  rating   |\r\n+---------+-----------+--------------+-----------+\r\n|   5     | House card|   Interesting|   9.1     |\r\n|   1     | War       |   great 3D   |   8.9     |\r\n+---------+-----------+--------------+-----------+\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n",
    "translatedTitle": null,
    "translatedContent": null,
    "isPaidOnly": false,
    "difficulty": "Easy",
    "likes": 192,
    "dislikes": 228,
    "isLiked": null,
    "similarQuestions": "[]",
    "contributors": [
      {
        "username": "Douglas1612",
        "profileUrl": "/douglas1612/",
        "avatarUrl": "https://www.gravatar.com/avatar/8e60a4b596b7a8ba118c776bac2a0b04.png?s=200",
        "__typename": "ContributorNode"
      }
    ],
    "langToValidPlayground": "{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}",
    "topicTags": [],
    "companyTagStats": null,
    "codeSnippets": [
      {
        "lang": "MySQL",
        "langSlug": "mysql",
        "code": "# Write your MySQL query statement below\n",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "MS SQL Server",
        "langSlug": "mssql",
        "code": "/* Write your T-SQL query statement below */\n",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Oracle",
        "langSlug": "oraclesql",
        "code": "/* Write your PL/SQL query statement below */\n",
        "__typename": "CodeSnippetNode"
      }
    ],
    "stats": "{\"totalAccepted\": \"72.8K\", \"totalSubmission\": \"115.8K\", \"totalAcceptedRaw\": 72817, \"totalSubmissionRaw\": 115796, \"acRate\": \"62.9%\"}",
    "hints": [],
    "solution": {
      "id": "204",
      "canSeeDetail": true,
      "__typename": "ArticleNode"
    },
    "status": null,
    "sampleTestCase": "{\"headers\":{\"cinema\":[\"id\", \"movie\", \"description\", \"rating\"]},\"rows\":{\"cinema\":[[1, \"War\", \"great 3D\", 8.9], [2, \"Science\", \"fiction\", 8.5], [3, \"irish\", \"boring\", 6.2], [4, \"Ice song\", \"Fantacy\", 8.6], [5, \"House card\", \"Interesting\", 9.1]]}}",
    "metaData": "{\r\n  \"mysql\": [\r\n    \"Create table If Not Exists cinema (id int, movie varchar(255), description varchar(255), rating float(2, 1))\"\r\n  ],\r\n  \"mssql\": [\r\n    \"Create table cinema (id int, movie varchar(255), description varchar(255), rating decimal(2, 1))\"\r\n  ],\r\n  \"oraclesql\": [\r\n    \"Create table cinema (id int, movie varchar(255), description varchar(255), rating number(2, 1))\"\r\n  ],\r\n  \"database\": true\r\n}",
    "judgerAvailable": true,
    "judgeType": "large",
    "mysqlSchemas": [
      "Create table If Not Exists cinema (id int, movie varchar(255), description varchar(255), rating float(2, 1))",
      "Truncate table cinema",
      "insert into cinema (id, movie, description, rating) values ('1', 'War', 'great 3D', '8.9')",
      "insert into cinema (id, movie, description, rating) values ('2', 'Science', 'fiction', '8.5')",
      "insert into cinema (id, movie, description, rating) values ('3', 'irish', 'boring', '6.2')",
      "insert into cinema (id, movie, description, rating) values ('4', 'Ice song', 'Fantacy', '8.6')",
      "insert into cinema (id, movie, description, rating) values ('5', 'House card', 'Interesting', '9.1')"
    ],
    "enableRunCode": true,
    "enableTestMode": false,
    "envInfo": "{\"mysql\": [\"MySQL\", \"<p>Run with <code>mysql-server 5.7.21</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p>Run with <code>mssql</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p>Run with <code>oracle sql</code>.</p>\"]}",
    "libraryUrl": null,
    "__typename": "QuestionNode"
  }
}