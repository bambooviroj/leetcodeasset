{
  "question": {
    "questionId": "133",
    "questionFrontendId": "133",
    "boundTopicId": null,
    "title": "Clone Graph",
    "titleSlug": "clone-graph",
    "content": "<p>Given&nbsp;a reference of a node in a&nbsp;<strong><a href=\"https://en.wikipedia.org/wiki/Connectivity_(graph_theory)#Connected_graph\" target=\"_blank\">connected</a></strong>&nbsp;undirected graph, return a <a href=\"https://en.wikipedia.org/wiki/Object_copying#Deep_copy\" target=\"_blank\"><strong>deep copy</strong></a> (clone) of the graph. Each node in the graph contains a val (<code>int</code>) and a list (<code>List[Node]</code>) of its neighbors.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/19/113_sample.png\" style=\"width: 200px; height: 149px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input:\r\n</strong>{&quot;$id&quot;:&quot;1&quot;,&quot;neighbors&quot;:[{&quot;$id&quot;:&quot;2&quot;,&quot;neighbors&quot;:[{&quot;$ref&quot;:&quot;1&quot;},{&quot;$id&quot;:&quot;3&quot;,&quot;neighbors&quot;:[{&quot;$ref&quot;:&quot;2&quot;},{&quot;$id&quot;:&quot;4&quot;,&quot;neighbors&quot;:[{&quot;$ref&quot;:&quot;3&quot;},{&quot;$ref&quot;:&quot;1&quot;}],&quot;val&quot;:4}],&quot;val&quot;:3}],&quot;val&quot;:2},{&quot;$ref&quot;:&quot;4&quot;}],&quot;val&quot;:1}\r\n\r\n<strong>Explanation:</strong>\r\nNode 1&#39;s value is 1, and it has two neighbors: Node 2 and 4.\r\nNode 2&#39;s value is 2, and it has two neighbors: Node 1 and 3.\r\nNode 3&#39;s value is 3, and it has two neighbors: Node 2 and 4.\r\nNode 4&#39;s value is 4, and it has two neighbors: Node 1 and 3.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>The number of nodes will be between 1 and 100.</li>\r\n\t<li>The undirected&nbsp;graph is a <a href=\"https://en.wikipedia.org/wiki/Graph_(discrete_mathematics)#Simple_graph\" target=\"_blank\">simple graph</a>,&nbsp;which means no repeated edges and no self-loops in the graph.</li>\r\n\t<li>Since the graph is undirected, if node <em>p</em>&nbsp;has node <em>q</em>&nbsp;as&nbsp;neighbor, then node <em>q</em>&nbsp;must have node <em>p</em>&nbsp;as neighbor too.</li>\r\n\t<li>You must return the <strong>copy of the given node</strong> as a reference to the cloned graph.</li>\r\n</ol>\r\n",
    "translatedTitle": null,
    "translatedContent": null,
    "isPaidOnly": false,
    "difficulty": "Medium",
    "likes": 923,
    "dislikes": 964,
    "isLiked": null,
    "similarQuestions": "[{\"title\": \"Copy List with Random Pointer\", \"titleSlug\": \"copy-list-with-random-pointer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
    "contributors": [],
    "langToValidPlayground": "{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}",
    "topicTags": [
      {
        "name": "Depth-first Search",
        "slug": "depth-first-search",
        "translatedName": null,
        "__typename": "TopicTagNode"
      },
      {
        "name": "Breadth-first Search",
        "slug": "breadth-first-search",
        "translatedName": null,
        "__typename": "TopicTagNode"
      },
      {
        "name": "Graph",
        "slug": "graph",
        "translatedName": null,
        "__typename": "TopicTagNode"
      }
    ],
    "companyTagStats": null,
    "codeSnippets": [
      {
        "lang": "C++",
        "langSlug": "cpp",
        "code": "/*\r\n// Definition for a Node.\r\nclass Node {\r\npublic:\r\n    int val;\r\n    vector<Node*> neighbors;\r\n\r\n    Node() {}\r\n\r\n    Node(int _val, vector<Node*> _neighbors) {\r\n        val = _val;\r\n        neighbors = _neighbors;\r\n    }\r\n};\r\n*/\r\nclass Solution {\r\npublic:\r\n    Node* cloneGraph(Node* node) {\r\n        \r\n    }\r\n};",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Java",
        "langSlug": "java",
        "code": "/*\r\n// Definition for a Node.\r\nclass Node {\r\n    public int val;\r\n    public List<Node> neighbors;\r\n\r\n    public Node() {}\r\n\r\n    public Node(int _val,List<Node> _neighbors) {\r\n        val = _val;\r\n        neighbors = _neighbors;\r\n    }\r\n};\r\n*/\r\nclass Solution {\r\n    public Node cloneGraph(Node node) {\r\n        \r\n    }\r\n}",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Python",
        "langSlug": "python",
        "code": "\"\"\"\r\n# Definition for a Node.\r\nclass Node(object):\r\n    def __init__(self, val, neighbors):\r\n        self.val = val\r\n        self.neighbors = neighbors\r\n\"\"\"\r\nclass Solution(object):\r\n    def cloneGraph(self, node):\r\n        \"\"\"\r\n        :type node: Node\r\n        :rtype: Node\r\n        \"\"\"\r\n        ",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Python3",
        "langSlug": "python3",
        "code": "\"\"\"\r\n# Definition for a Node.\r\nclass Node:\r\n    def __init__(self, val, neighbors):\r\n        self.val = val\r\n        self.neighbors = neighbors\r\n\"\"\"\r\nclass Solution:\r\n    def cloneGraph(self, node: 'Node') -> 'Node':\r\n        ",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "C#",
        "langSlug": "csharp",
        "code": "/*\r\n// Definition for a Node.\r\npublic class Node {\r\n    public int val;\r\n    public IList<Node> neighbors;\r\n\r\n    public Node(){}\r\n    public Node(int _val,IList<Node> _neighbors) {\r\n        val = _val;\r\n        neighbors = _neighbors;\r\n}\r\n*/\r\npublic class Solution {\r\n    public Node CloneGraph(Node node) {\r\n        \r\n    }\r\n}",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "JavaScript",
        "langSlug": "javascript",
        "code": "/**\r\n * // Definition for a Node.\r\n * function Node(val,neighbors) {\r\n *    this.val = val;\r\n *    this.neighbors = neighbors;\r\n * };\r\n */\r\n/**\r\n * @param {Node} node\r\n * @return {Node}\r\n */\r\nvar cloneGraph = function(node) {\r\n    \r\n};",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "PHP",
        "langSlug": "php",
        "code": "/*\r\n// Definition for a Node.\r\nclass Node {\r\n    public $val;\r\n    public $neighbors;\r\n\r\n    @param Integer $val \r\n    @param list<Node> $neighbors \r\n    function __construct($val, $neighbors) {\r\n        $this->val = $val;\r\n        $this->neighbors = $neighbors;\r\n    }\r\n}\r\n*/\r\nclass Solution {\r\n\r\n    /**\r\n     * @param Node $node\r\n     * @return Node\r\n     */\r\n    function cloneGraph($node) {\r\n        \r\n    }\r\n}",
        "__typename": "CodeSnippetNode"
      }
    ],
    "stats": "{\"totalAccepted\": \"238K\", \"totalSubmission\": \"847.1K\", \"totalAcceptedRaw\": 237959, \"totalSubmissionRaw\": 847087, \"acRate\": \"28.1%\"}",
    "hints": [],
    "solution": null,
    "status": null,
    "sampleTestCase": "{\"$id\":\"1\",\"neighbors\":[{\"$id\":\"2\",\"neighbors\":[{\"$ref\":\"1\"},{\"$id\":\"3\",\"neighbors\":[{\"$ref\":\"2\"},{\"$id\":\"4\",\"neighbors\":[{\"$ref\":\"3\"},{\"$ref\":\"1\"}],\"val\":4}],\"val\":3}],\"val\":2},{\"$ref\":\"4\"}],\"val\":1}",
    "metaData": "{\n  \"name\": \"cloneGraph\",\n  \"params\": [\n    {\n      \"name\": \"node\",\n      \"type\": \"Node\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"Node\"\n  },\n  \"structures\": [\n    {\n      \"name\": \"Node\",\n      \"comment\": \"Definition for a Node.\",\n      \"members\": [\n        {\n          \"name\": \"val\",\n          \"type\": \"integer\"\n        },\n        {\n          \"name\": \"neighbors\",\n          \"type\": \"list<Node>\"\n        }\n      ]\n    }\n  ],\n  \"languages\": [\n    \"cpp\",\n    \"java\",\n    \"python\",\n    \"csharp\",\n    \"javascript\",\n    \"python3\",\n    \"php\"\n  ],\n  \"manual\": true\n}",
    "judgerAvailable": true,
    "judgeType": "large",
    "mysqlSchemas": [],
    "enableRunCode": true,
    "enableTestMode": false,
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 8.2</code> using the latest C++ 17 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"csharp\": [\"C#\", \"<p>Compiled with <code>mono 5.18.0</code> providing <a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">full support for C# 7</a>.</p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p>Run with <code>nodejs 10.15.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.6</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"php\": [\"PHP\", \"<p>Run with <code>PHP 7.2</code>.</p>\"]}",
    "libraryUrl": null,
    "__typename": "QuestionNode"
  }
}