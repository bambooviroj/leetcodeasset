{
  "question": {
    "questionId": "690",
    "questionFrontendId": "690",
    "boundTopicId": null,
    "title": "Employee Importance",
    "titleSlug": "employee-importance",
    "content": "<p>You are given a data structure of employee information, which includes the employee&#39;s <b>unique id</b>, his <b>importance value</b> and his <b>direct</b> subordinates&#39; id.</p>\r\n\r\n<p>For example, employee 1 is the leader of employee 2, and employee 2 is the leader of employee 3. They have importance value 15, 10 and 5, respectively. Then employee 1 has a data structure like [1, 15, [2]], and employee 2 has [2, 10, [3]], and employee 3 has [3, 5, []]. Note that although employee 3 is also a subordinate of employee 1, the relationship is <b>not direct</b>.</p>\r\n\r\n<p>Now given the employee information of a company, and an employee id, you need to return the total importance value of this employee and all his subordinates.</p>\r\n\r\n<p><b>Example 1:</b></p>\r\n\r\n<pre>\r\n<b>Input:</b> [[1, 5, [2, 3]], [2, 3, []], [3, 3, []]], 1\r\n<b>Output:</b> 11\r\n<b>Explanation:</b>\r\nEmployee 1 has importance value 5, and he has two direct subordinates: employee 2 and employee 3. They both have importance value 3. So the total importance value of employee 1 is 5 + 3 + 3 = 11.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>One employee has at most one <b>direct</b> leader and may have several subordinates.</li>\r\n\t<li>The maximum number of employees won&#39;t exceed 2000.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n",
    "translatedTitle": null,
    "translatedContent": null,
    "isPaidOnly": false,
    "difficulty": "Easy",
    "likes": 434,
    "dislikes": 455,
    "isLiked": null,
    "similarQuestions": "[{\"title\": \"Nested List Weight Sum\", \"titleSlug\": \"nested-list-weight-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
    "contributors": [
      {
        "username": "fallcreek",
        "profileUrl": "/fallcreek/",
        "avatarUrl": "https://www.gravatar.com/avatar/043194ec5c4c5d2778049a3fa6d2e1d8.png?s=200",
        "__typename": "ContributorNode"
      }
    ],
    "langToValidPlayground": "{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false}",
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table",
        "translatedName": null,
        "__typename": "TopicTagNode"
      },
      {
        "name": "Depth-first Search",
        "slug": "depth-first-search",
        "translatedName": null,
        "__typename": "TopicTagNode"
      },
      {
        "name": "Breadth-first Search",
        "slug": "breadth-first-search",
        "translatedName": null,
        "__typename": "TopicTagNode"
      }
    ],
    "companyTagStats": null,
    "codeSnippets": [
      {
        "lang": "C++",
        "langSlug": "cpp",
        "code": "/*\r\n// Employee info\r\nclass Employee {\r\npublic:\r\n    // It's the unique ID of each node.\r\n    // unique id of this employee\r\n    int id;\r\n    // the importance value of this employee\r\n    int importance;\r\n    // the id of direct subordinates\r\n    vector<int> subordinates;\r\n};\r\n*/\r\nclass Solution {\r\npublic:\r\n    int getImportance(vector<Employee*> employees, int id) {\r\n        \r\n    }\r\n};",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Java",
        "langSlug": "java",
        "code": "/*\r\n// Employee info\r\nclass Employee {\r\n    // It's the unique id of each node;\r\n    // unique id of this employee\r\n    public int id;\r\n    // the importance value of this employee\r\n    public int importance;\r\n    // the id of direct subordinates\r\n    public List<Integer> subordinates;\r\n};\r\n*/\r\nclass Solution {\r\n    public int getImportance(List<Employee> employees, int id) {\r\n        \r\n    }\r\n}",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Python",
        "langSlug": "python",
        "code": "\"\"\"\r\n# Employee info\r\nclass Employee(object):\r\n    def __init__(self, id, importance, subordinates):\r\n        # It's the unique id of each node.\r\n        # unique id of this employee\r\n        self.id = id\r\n        # the importance value of this employee\r\n        self.importance = importance\r\n        # the id of direct subordinates\r\n        self.subordinates = subordinates\r\n\"\"\"\r\nclass Solution(object):\r\n    def getImportance(self, employees, id):\r\n        \"\"\"\r\n        :type employees: Employee\r\n        :type id: int\r\n        :rtype: int\r\n        \"\"\"\r\n        ",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Python3",
        "langSlug": "python3",
        "code": "\"\"\"\r\n# Employee info\r\nclass Employee:\r\n    def __init__(self, id, importance, subordinates):\r\n        # It's the unique id of each node.\r\n        # unique id of this employee\r\n        self.id = id\r\n        # the importance value of this employee\r\n        self.importance = importance\r\n        # the id of direct subordinates\r\n        self.subordinates = subordinates\r\n\"\"\"\r\nclass Solution:\r\n    def getImportance(self, employees, id):\r\n        \"\"\"\r\n        :type employees: Employee\r\n        :type id: int\r\n        :rtype: int\r\n        \"\"\"",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "Ruby",
        "langSlug": "ruby",
        "code": "=begin\r\n# Employee info\r\nclass Employee\r\n    attr_accessor :id, :importance, :subordinates\r\n    def initialize( id, importance, subordinates)\r\n        # It's the unique id of each node.\r\n        # unique id of this employee\r\n        @id = id\r\n        # the importance value of this employee\r\n        @importance = importance\r\n        # the id of direct subordinates\r\n        @subordinates = subordinates\r\n    end\r\nend\r\n=end\r\n# @param {Employee} employees\r\n# @param {Integer} id\r\n# @return {Integer}\r\ndef get_importance(employees, id)\r\n    \r\nend",
        "__typename": "CodeSnippetNode"
      },
      {
        "lang": "PHP",
        "langSlug": "php",
        "code": "/*\r\n// Employee info\r\nclass Employee {\r\n    public $id;\r\n    public $importance;\r\n    public $subordinates;\r\n\r\n    @param Integer $id \r\n    @param Integer $importance \r\n    @param Integer[] $subordinates \r\n    function __construct($id, $importance, $subordinates) {\r\n        // unique id of this employee\r\n        $this->id = $id;\r\n        // the importance value of this employee\r\n        $this->importance = $importance;\r\n        // the id of direct subordinates\r\n        $this->subordinates = $subordinates;\r\n    }\r\n}\r\n*/\r\nclass Solution {\r\n\r\n    /**\r\n     * @param list<Employee> $employees\r\n     * @param Integer $id\r\n     * @return Integer\r\n     */\r\n    function getImportance($employees, $id) {\r\n        \r\n    }\r\n}",
        "__typename": "CodeSnippetNode"
      }
    ],
    "stats": "{\"totalAccepted\": \"51.4K\", \"totalSubmission\": \"93.8K\", \"totalAcceptedRaw\": 51372, \"totalSubmissionRaw\": 93794, \"acRate\": \"54.8%\"}",
    "hints": [],
    "solution": {
      "id": "303",
      "canSeeDetail": true,
      "__typename": "ArticleNode"
    },
    "status": null,
    "sampleTestCase": "[[1,2,[2]], [2,3,[]]]\n2",
    "metaData": "{\n  \"name\": \"getImportance\",\n  \"params\": [\n    {\n      \"name\": \"employees\",\n      \"type\": \"list<Employee>\"\n    },\n    {\n      \"name\": \"id\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  },\n  \"structures\": [\n    {\n      \"name\": \"Employee\",\n      \"comment\": \"Employee info\",\n      \"members\": [\n        {\n          \"name\": \"id\",\n          \"type\": \"integer\",\n          \"comment\": \"unique id of this employee\"\n        },\n        {\n          \"name\": \"importance\",\n          \"type\": \"integer\",\n          \"comment\": \"the importance value of this employee\"\n        },\n        {\n          \"name\": \"subordinates\",\n          \"type\": \"list<integer>\",\n          \"comment\": \"the id of direct subordinates\"\n        }\n      ]\n    }\n  ],\n  \"languages\": [\n    \"cpp\",\n    \"java\",\n    \"python\",\n    \"ruby\",\n    \"python3\",\n    \"php\"\n  ],\n  \"manual\": true\n}",
    "judgerAvailable": true,
    "judgeType": "large",
    "mysqlSchemas": [],
    "enableRunCode": true,
    "enableTestMode": false,
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 8.2</code> using the latest C++ 17 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"ruby\": [\"Ruby\", \"<p>Run with <code>ruby 2.4.5</code>.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.6</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"php\": [\"PHP\", \"<p>Run with <code>PHP 7.2</code>.</p>\"]}",
    "libraryUrl": null,
    "__typename": "QuestionNode"
  }
}