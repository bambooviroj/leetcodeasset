{
  "question": {
    "questionId": "603",
    "questionFrontendId": "603",
    "boundTopicId": null,
    "title": "Consecutive Available Seats",
    "titleSlug": "consecutive-available-seats",
    "content": null,
    "translatedTitle": null,
    "translatedContent": null,
    "isPaidOnly": true,
    "difficulty": "Easy",
    "likes": 109,
    "dislikes": 7,
    "isLiked": null,
    "similarQuestions": "[]",
    "contributors": [
      {
        "username": "Mr-Bin",
        "profileUrl": "/mr-bin/",
        "avatarUrl": "https://assets.leetcode.com/users/mr-bin/avatar_1547655304.png",
        "__typename": "ContributorNode"
      }
    ],
    "langToValidPlayground": null,
    "topicTags": [],
    "companyTagStats": null,
    "codeSnippets": null,
    "stats": "{\"totalAccepted\": \"11.9K\", \"totalSubmission\": \"20K\", \"totalAcceptedRaw\": 11883, \"totalSubmissionRaw\": 20036, \"acRate\": \"59.3%\"}",
    "hints": [],
    "solution": {
      "id": "168",
      "canSeeDetail": true,
      "__typename": "ArticleNode"
    },
    "status": null,
    "sampleTestCase": "{\"headers\":{\"cinema\":[\"seat_id\",\"free\"]},\"rows\":{\"cinema\":[[1,1],[2,0],[3,1],[4,1],[5,1]]}}",
    "metaData": "{\r\n  \"mysql\": [\r\n    \"Create table If Not Exists cinema (seat_id int primary key auto_increment, free bool)\"\r\n  ],\r\n  \"mssql\": [\r\n    \"Create table cinema (seat_id int primary key, free BIT)\"\r\n  ],\r\n  \"oraclesql\": [\r\n    \"Create table cinema (seat_id int primary key, free NUMBER(1))\"\r\n  ],\r\n  \"database\": true\r\n}",
    "judgerAvailable": true,
    "judgeType": "large",
    "mysqlSchemas": [
      "Create table If Not Exists cinema (seat_id int primary key auto_increment, free bool)",
      "Truncate table cinema",
      "insert into cinema (seat_id, free) values ('1', '1')",
      "insert into cinema (seat_id, free) values ('2', '0')",
      "insert into cinema (seat_id, free) values ('3', '1')",
      "insert into cinema (seat_id, free) values ('4', '1')",
      "insert into cinema (seat_id, free) values ('5', '1')"
    ],
    "enableRunCode": true,
    "enableTestMode": false,
    "envInfo": "{\"mysql\": [\"MySQL\", \"<p>Run with <code>mysql-server 5.7.21</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p>Run with <code>mssql</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p>Run with <code>oracle sql</code>.</p>\"]}",
    "libraryUrl": null,
    "__typename": "QuestionNode"
  }
}