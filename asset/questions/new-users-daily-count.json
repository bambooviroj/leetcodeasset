{
  "question": {
    "questionId": "1204",
    "questionFrontendId": "1107",
    "boundTopicId": null,
    "title": "New Users Daily Count",
    "titleSlug": "new-users-daily-count",
    "content": null,
    "translatedTitle": null,
    "translatedContent": null,
    "isPaidOnly": true,
    "difficulty": "Medium",
    "likes": 15,
    "dislikes": 4,
    "isLiked": null,
    "similarQuestions": "[]",
    "contributors": [],
    "langToValidPlayground": null,
    "topicTags": [],
    "companyTagStats": null,
    "codeSnippets": null,
    "stats": "{\"totalAccepted\": \"1.3K\", \"totalSubmission\": \"3.1K\", \"totalAcceptedRaw\": 1344, \"totalSubmissionRaw\": 3146, \"acRate\": \"42.7%\"}",
    "hints": [],
    "solution": null,
    "status": null,
    "sampleTestCase": "{\"headers\":{\"Traffic\":[\"user_id\",\"activity\",\"activity_date\"]},\"rows\":{\"Traffic\":[[1,\"login\",\"2019-05-01\"],[1,\"homepage\",\"2019-05-01\"],[1,\"logout\",\"2019-05-01\"],[2,\"login\",\"2019-06-21\"],[2,\"logout\",\"2019-06-21\"],[3,\"login\",\"2019-01-01\"],[3,\"jobs\",\"2019-01-01\"],[3,\"logout\",\"2019-01-01\"],[4,\"login\",\"2019-06-21\"],[4,\"groups\",\"2019-06-21\"],[4,\"logout\",\"2019-06-21\"],[5,\"login\",\"2019-03-01\"],[5,\"logout\",\"2019-03-01\"],[5,\"login\",\"2019-06-21\"],[5,\"logout\",\"2019-06-21\"]]}}",
    "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Traffic (user_id int, activity ENUM('login', 'logout', 'jobs', 'groups', 'homepage'), activity_date date)\"\n  ],\n  \"mssql\": [\n    \"create table Traffic (user_id int, activity VARCHAR(10) NOT NULL CHECK (activity IN ('login', 'logout', 'jobs', 'groups', 'homepage')), activity_date date)\"\n  ],\n  \"oraclesql\": [\n    \"create table Traffic (user_id int, activity VARCHAR(10) NOT NULL CHECK (activity IN ('login', 'logout', 'jobs', 'groups', 'homepage')), activity_date date)\",\n    \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\"\n  ],\n  \"database\": true\n}",
    "judgerAvailable": true,
    "judgeType": "large",
    "mysqlSchemas": [
      "Create table If Not Exists Traffic (user_id int, activity ENUM('login', 'logout', 'jobs', 'groups', 'homepage'), activity_date date)",
      "Truncate table Traffic",
      "insert into Traffic (user_id, activity, activity_date) values ('1', 'login', '2019-05-01')",
      "insert into Traffic (user_id, activity, activity_date) values ('1', 'homepage', '2019-05-01')",
      "insert into Traffic (user_id, activity, activity_date) values ('1', 'logout', '2019-05-01')",
      "insert into Traffic (user_id, activity, activity_date) values ('2', 'login', '2019-06-21')",
      "insert into Traffic (user_id, activity, activity_date) values ('2', 'logout', '2019-06-21')",
      "insert into Traffic (user_id, activity, activity_date) values ('3', 'login', '2019-01-01')",
      "insert into Traffic (user_id, activity, activity_date) values ('3', 'jobs', '2019-01-01')",
      "insert into Traffic (user_id, activity, activity_date) values ('3', 'logout', '2019-01-01')",
      "insert into Traffic (user_id, activity, activity_date) values ('4', 'login', '2019-06-21')",
      "insert into Traffic (user_id, activity, activity_date) values ('4', 'groups', '2019-06-21')",
      "insert into Traffic (user_id, activity, activity_date) values ('4', 'logout', '2019-06-21')",
      "insert into Traffic (user_id, activity, activity_date) values ('5', 'login', '2019-03-01')",
      "insert into Traffic (user_id, activity, activity_date) values ('5', 'logout', '2019-03-01')",
      "insert into Traffic (user_id, activity, activity_date) values ('5', 'login', '2019-06-21')",
      "insert into Traffic (user_id, activity, activity_date) values ('5', 'logout', '2019-06-21')"
    ],
    "enableRunCode": true,
    "enableTestMode": false,
    "envInfo": "{\"mysql\": [\"MySQL\", \"<p>Run with <code>mysql-server 5.7.21</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p>Run with <code>mssql</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p>Run with <code>oracle sql</code>.</p>\"]}",
    "libraryUrl": null,
    "__typename": "QuestionNode"
  }
}