{
  "question": {
    "questionId": "1136",
    "questionFrontendId": "1050",
    "boundTopicId": null,
    "title": "Actors and Directors Who Cooperated At Least Three Times",
    "titleSlug": "actors-and-directors-who-cooperated-at-least-three-times",
    "content": null,
    "translatedTitle": null,
    "translatedContent": null,
    "isPaidOnly": true,
    "difficulty": "Easy",
    "likes": 11,
    "dislikes": 7,
    "isLiked": null,
    "similarQuestions": "[]",
    "contributors": [],
    "langToValidPlayground": null,
    "topicTags": [],
    "companyTagStats": null,
    "codeSnippets": null,
    "stats": "{\"totalAccepted\": \"3.6K\", \"totalSubmission\": \"5K\", \"totalAcceptedRaw\": 3616, \"totalSubmissionRaw\": 5032, \"acRate\": \"71.9%\"}",
    "hints": [],
    "solution": null,
    "status": null,
    "sampleTestCase": "{\"headers\":{\"ActorDirector\":[\"actor_id\",\"director_id\",\"timestamp\"]},\"rows\":{\"ActorDirector\":[[1,1,0],[1,1,1],[1,1,2],[1,2,3],[1,2,4],[2,1,5],[2,1,6]]}}",
    "metaData": "{\r\n  \"mysql\": [\r\n    \"Create table If Not Exists ActorDirector (actor_id int, director_id int, timestamp int)\"\r\n  ],\r\n  \"mssql\": [\r\n    \"Create table ActorDirector (actor_id int, director_id int, timestamp int)\"\r\n  ],\r\n  \"oraclesql\": [\r\n    \"Create table ActorDirector (actor_id int, director_id int, timestamp int)\"\r\n  ],\r\n  \"database\": true\r\n}",
    "judgerAvailable": true,
    "judgeType": "large",
    "mysqlSchemas": [
      "Create table If Not Exists ActorDirector (actor_id int, director_id int, timestamp int)",
      "Truncate table ActorDirector",
      "insert into ActorDirector (actor_id, director_id, timestamp) values ('1', '1', '0')",
      "insert into ActorDirector (actor_id, director_id, timestamp) values ('1', '1', '1')",
      "insert into ActorDirector (actor_id, director_id, timestamp) values ('1', '1', '2')",
      "insert into ActorDirector (actor_id, director_id, timestamp) values ('1', '2', '3')",
      "insert into ActorDirector (actor_id, director_id, timestamp) values ('1', '2', '4')",
      "insert into ActorDirector (actor_id, director_id, timestamp) values ('2', '1', '5')",
      "insert into ActorDirector (actor_id, director_id, timestamp) values ('2', '1', '6')"
    ],
    "enableRunCode": true,
    "enableTestMode": false,
    "envInfo": "{\"mysql\": [\"MySQL\", \"<p>Run with <code>mysql-server 5.7.21</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p>Run with <code>mssql</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p>Run with <code>oracle sql</code>.</p>\"]}",
    "libraryUrl": null,
    "__typename": "QuestionNode"
  }
}